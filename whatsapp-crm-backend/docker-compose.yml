version: '3.8'

services:

  # ========================================
  # LibreTranslate - FREE Self-Hosted Translation
  # ========================================
  libretranslate:
    image: libretranslate/libretranslate:v1.5.7
    container_name: whatsapp-crm-translate
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      LT_DISABLE_WEB_UI: "true"      # Disable UI in production
      LT_UPDATE_MODELS: "false"      # Prevent auto-updates
      LT_THREADS: "4"
      LT_FRONTEND_LANGUAGE_SOURCE: "en"
      LT_FRONTEND_LANGUAGE_TARGET: "hi"
    volumes:
      - libretranslate_data:/home/libretranslate/.local
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/languages || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - whatsapp-crm-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '1'




  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: whatsapp-crm-db
    environment:
      POSTGRES_USER: ajsal
      POSTGRES_PASSWORD: "ajsalpv@4champz.in"
      POSTGRES_DB: whatsapp_crm
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ajsal -d whatsapp_crm"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - whatsapp-crm-network
    restart: unless-stopped

  # Node.js Backend
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: whatsapp-crm-api
    depends_on:
      postgres:
        condition: service_healthy
      libretranslate:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DB_USER: ajsal
      DB_HOST: postgres
      DB_NAME: whatsapp_crm
      DB_PASSWORD: "ajsalpv@4champz.in"
      DB_PORT: 5432
      PORT: 3000
      API_KEY: ${API_KEY:-your_secret_api_key_change_this}
      GROQ_API_KEY: ${GROQ_API_KEY:-your_groq_api_key}
      LIBRETRANSLATE_URL: http://libretranslate:5000
      DEEPL_API_KEY: ${DEEPL_API_KEY:-}
    ports:
      - "3000:3000"
    volumes:
      - ./server.js:/app/server.js:ro
      - ./package.json:/app/package.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - whatsapp-crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"



  # ========================================
  # Python AI Agent (Voice + WhatsApp AI)
  # ========================================
  python-agent:
    build:
      context: ../call automation
      dockerfile: Dockerfile
    container_name: whatsapp-crm-ai-agent
    depends_on:
      postgres:
        condition: service_healthy
      libretranslate:
        condition: service_healthy
    environment:
      PORT: 8000
      DB_HOST: postgres
      DB_USER: ajsal
      DB_PASSWORD: "ajsalpv@4champz.in"
      DB_NAME: whatsapp_crm
      DB_PORT: 5432
      LIBRETRANSLATE_URL: http://libretranslate:5000
      DEEPL_API_KEY: ${DEEPL_API_KEY:-}
    ports:
      - "8000:8000"
    volumes:
      - ../call automation:/app:ro
    restart: unless-stopped
    networks:
      - whatsapp-crm-network



volumes:
  postgres_data:
    driver: local
  libretranslate_data:
    driver: local

networks:
  whatsapp-crm-network:
    driver: bridge